{"ast":null,"code":"export default {\n  name: 'ContentElement',\n  props: {\n    element: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    mediaPositionClass() {\n      // TYPO3 uses values like 0 (above), 8 (below), 17 (left), 18 (right)\n      const position = this.element.imageorient || 0;\n      if (position === 0) return 'media-above';\n      if (position === 8) return 'media-below';\n      if (position === 17) return 'media-left';\n      if (position === 18) return 'media-right';\n      return 'media-above'; // Default\n    }\n  },\n  methods: {\n    isImage(file) {\n      return file.mimeType && file.mimeType.startsWith('image/');\n    },\n    isVideo(file) {\n      return file.mimeType && file.mimeType.startsWith('video/');\n    }\n  }\n};","map":{"version":3,"names":["name","props","element","type","Object","required","computed","mediaPositionClass","position","imageorient","methods","isImage","file","mimeType","startsWith","isVideo"],"sources":["/home/soroosh/Docker-projects/DemoApp/frontend/src/components/ContentElement.vue"],"sourcesContent":["<template>\n  <div class=\"content-element\" :class=\"element.type\">\n    <!-- Text element -->\n    <div v-if=\"element.type === 'text'\" class=\"text-element\">\n      <div v-html=\"element.bodytext\"></div>\n    </div>\n\n    <!-- Text with media element -->\n    <div v-else-if=\"element.type === 'textmedia'\" class=\"textmedia-element\">\n      <div class=\"media-container\" :class=\"mediaPositionClass\">\n        <div v-for=\"(file, fileIndex) in element.media\" :key=\"fileIndex\" class=\"media-item\">\n          <img v-if=\"isImage(file)\" :src=\"file.publicUrl\" :alt=\"file.alternative || ''\" :title=\"file.title || ''\" />\n          <video v-else-if=\"isVideo(file)\" controls>\n            <source :src=\"file.publicUrl\" :type=\"file.mimeType\">\n            Your browser does not support the video tag.\n          </video>\n        </div>\n      </div>\n      <div class=\"text-container\" v-html=\"element.bodytext\"></div>\n    </div>\n\n    <!-- Image element -->\n    <div v-else-if=\"element.type === 'image'\" class=\"image-element\">\n      <div class=\"image-container\">\n        <div v-for=\"(file, fileIndex) in element.media\" :key=\"fileIndex\" class=\"image-item\">\n          <img :src=\"file.publicUrl\" :alt=\"file.alternative || ''\" :title=\"file.title || ''\" />\n        </div>\n      </div>\n    </div>\n\n    <!-- Default fallback for other element types -->\n    <div v-else class=\"unknown-element\">\n      <p>Unsupported content element type: {{ element.type }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ContentElement',\n  props: {\n    element: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    mediaPositionClass() {\n      // TYPO3 uses values like 0 (above), 8 (below), 17 (left), 18 (right)\n      const position = this.element.imageorient || 0;\n      \n      if (position === 0) return 'media-above';\n      if (position === 8) return 'media-below';\n      if (position === 17) return 'media-left';\n      if (position === 18) return 'media-right';\n      \n      return 'media-above'; // Default\n    }\n  },\n  methods: {\n    isImage(file) {\n      return file.mimeType && file.mimeType.startsWith('image/');\n    },\n    isVideo(file) {\n      return file.mimeType && file.mimeType.startsWith('video/');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.content-element {\n  margin-bottom: 2rem;\n}\n\n.text-element, .textmedia-element, .image-element {\n  width: 100%;\n}\n\n.media-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-bottom: 1rem;\n}\n\n.media-item, .image-item {\n  max-width: 100%;\n}\n\n.media-item img, .image-item img, .media-item video {\n  max-width: 100%;\n  height: auto;\n}\n\n/* Media positioning styles */\n.media-above {\n  order: -1;\n}\n\n.media-below {\n  order: 1;\n}\n\n.media-left {\n  float: left;\n  margin-right: 1rem;\n  max-width: 50%;\n}\n\n.media-right {\n  float: right;\n  margin-left: 1rem;\n  max-width: 50%;\n}\n\n.textmedia-element {\n  display: flex;\n  flex-direction: column;\n}\n\n.textmedia-element.media-left, .textmedia-element.media-right {\n  flex-direction: row;\n  align-items: flex-start;\n}\n\n.text-container {\n  flex: 1;\n}\n</style>"],"mappings":"AAsCA,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkBA,CAAA,EAAG;MACnB;MACA,MAAMC,QAAO,GAAI,IAAI,CAACN,OAAO,CAACO,WAAU,IAAK,CAAC;MAE9C,IAAID,QAAO,KAAM,CAAC,EAAE,OAAO,aAAa;MACxC,IAAIA,QAAO,KAAM,CAAC,EAAE,OAAO,aAAa;MACxC,IAAIA,QAAO,KAAM,EAAE,EAAE,OAAO,YAAY;MACxC,IAAIA,QAAO,KAAM,EAAE,EAAE,OAAO,aAAa;MAEzC,OAAO,aAAa,EAAE;IACxB;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,OAAOA,CAACC,IAAI,EAAE;MACZ,OAAOA,IAAI,CAACC,QAAO,IAAKD,IAAI,CAACC,QAAQ,CAACC,UAAU,CAAC,QAAQ,CAAC;IAC5D,CAAC;IACDC,OAAOA,CAACH,IAAI,EAAE;MACZ,OAAOA,IAAI,CAACC,QAAO,IAAKD,IAAI,CAACC,QAAQ,CAACC,UAAU,CAAC,QAAQ,CAAC;IAC5D;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}